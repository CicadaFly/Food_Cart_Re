[{"C:\\Users\\User\\Documents\\ReactPractice\\Food_cart_re\\src\\index.js":"1","C:\\Users\\User\\Documents\\ReactPractice\\Food_cart_re\\src\\App.js":"2","C:\\Users\\User\\Documents\\ReactPractice\\Food_cart_re\\src\\components\\Meals\\Meals.js":"3","C:\\Users\\User\\Documents\\ReactPractice\\Food_cart_re\\src\\components\\Cart\\Cart.js":"4","C:\\Users\\User\\Documents\\ReactPractice\\Food_cart_re\\src\\components\\Layout\\Header.js":"5","C:\\Users\\User\\Documents\\ReactPractice\\Food_cart_re\\src\\store\\CartProvider.js":"6","C:\\Users\\User\\Documents\\ReactPractice\\Food_cart_re\\src\\components\\Layout\\HeaderCartButton.js":"7","C:\\Users\\User\\Documents\\ReactPractice\\Food_cart_re\\src\\components\\Meals\\MealsSummary.js":"8","C:\\Users\\User\\Documents\\ReactPractice\\Food_cart_re\\src\\components\\Meals\\AvailableMeals.js":"9","C:\\Users\\User\\Documents\\ReactPractice\\Food_cart_re\\src\\store\\Cart-Context.js":"10","C:\\Users\\User\\Documents\\ReactPractice\\Food_cart_re\\src\\components\\Cart\\CartItem.js":"11","C:\\Users\\User\\Documents\\ReactPractice\\Food_cart_re\\src\\components\\UI\\Modal.js":"12","C:\\Users\\User\\Documents\\ReactPractice\\Food_cart_re\\src\\components\\UI\\Card.js":"13","C:\\Users\\User\\Documents\\ReactPractice\\Food_cart_re\\src\\components\\Meals\\MealsItem\\MealsItem.js":"14","C:\\Users\\User\\Documents\\ReactPractice\\Food_cart_re\\src\\components\\Meals\\MealsItem\\MealsForm.js":"15","C:\\Users\\User\\Documents\\ReactPractice\\Food_cart_re\\src\\components\\UI\\Input.js":"16","C:\\Users\\User\\Documents\\ReactPractice\\Food_cart_re\\src\\components\\Cart\\CartIcon.js":"17","C:\\Users\\User\\Documents\\ReactPractice\\Food_cart_re\\src\\components\\Cart\\customerCheck.js":"18","C:\\Users\\User\\Documents\\ReactPractice\\Food_cart_re\\src\\components\\Cart\\CustomerCheck.js":"19"},{"size":179,"mtime":1648642748000,"results":"20","hashOfConfig":"21"},{"size":617,"mtime":1667802714372,"results":"22","hashOfConfig":"21"},{"size":275,"mtime":1667461817043,"results":"23","hashOfConfig":"21"},{"size":3111,"mtime":1668664925032,"results":"24","hashOfConfig":"21"},{"size":502,"mtime":1667552326131,"results":"25","hashOfConfig":"21"},{"size":2933,"mtime":1668664252975,"results":"26","hashOfConfig":"21"},{"size":1154,"mtime":1667961448373,"results":"27","hashOfConfig":"21"},{"size":547,"mtime":1667461409169,"results":"28","hashOfConfig":"21"},{"size":2700,"mtime":1668414220128,"results":"29","hashOfConfig":"21"},{"size":205,"mtime":1667808025224,"results":"30","hashOfConfig":"21"},{"size":635,"mtime":1665024470309,"results":"31","hashOfConfig":"21"},{"size":765,"mtime":1667553476356,"results":"32","hashOfConfig":"21"},{"size":178,"mtime":1667465460806,"results":"33","hashOfConfig":"21"},{"size":852,"mtime":1667807821043,"results":"34","hashOfConfig":"21"},{"size":1431,"mtime":1667803829939,"results":"35","hashOfConfig":"21"},{"size":332,"mtime":1667803957832,"results":"36","hashOfConfig":"21"},{"size":501,"mtime":1664371667575,"results":"37","hashOfConfig":"21"},{"size":3032,"mtime":1668591344614,"results":"38","hashOfConfig":"21"},{"size":2916,"mtime":1668593241886,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"rg3psh",{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},"C:\\Users\\User\\Documents\\ReactPractice\\Food_cart_re\\src\\index.js",[],["81","82"],"C:\\Users\\User\\Documents\\ReactPractice\\Food_cart_re\\src\\App.js",[],"C:\\Users\\User\\Documents\\ReactPractice\\Food_cart_re\\src\\components\\Meals\\Meals.js",[],"C:\\Users\\User\\Documents\\ReactPractice\\Food_cart_re\\src\\components\\Cart\\Cart.js",["83","84","85"],"C:\\Users\\User\\Documents\\ReactPractice\\Food_cart_re\\src\\components\\Layout\\Header.js",[],"C:\\Users\\User\\Documents\\ReactPractice\\Food_cart_re\\src\\store\\CartProvider.js",[],"C:\\Users\\User\\Documents\\ReactPractice\\Food_cart_re\\src\\components\\Layout\\HeaderCartButton.js",[],"C:\\Users\\User\\Documents\\ReactPractice\\Food_cart_re\\src\\components\\Meals\\MealsSummary.js",[],"C:\\Users\\User\\Documents\\ReactPractice\\Food_cart_re\\src\\components\\Meals\\AvailableMeals.js",[],"C:\\Users\\User\\Documents\\ReactPractice\\Food_cart_re\\src\\store\\Cart-Context.js",[],"C:\\Users\\User\\Documents\\ReactPractice\\Food_cart_re\\src\\components\\Cart\\CartItem.js",[],"C:\\Users\\User\\Documents\\ReactPractice\\Food_cart_re\\src\\components\\UI\\Modal.js",[],"C:\\Users\\User\\Documents\\ReactPractice\\Food_cart_re\\src\\components\\UI\\Card.js",[],"C:\\Users\\User\\Documents\\ReactPractice\\Food_cart_re\\src\\components\\Meals\\MealsItem\\MealsItem.js",[],"C:\\Users\\User\\Documents\\ReactPractice\\Food_cart_re\\src\\components\\Meals\\MealsItem\\MealsForm.js",[],"C:\\Users\\User\\Documents\\ReactPractice\\Food_cart_re\\src\\components\\UI\\Input.js",[],"C:\\Users\\User\\Documents\\ReactPractice\\Food_cart_re\\src\\components\\Cart\\CartIcon.js",[],"C:\\Users\\User\\Documents\\ReactPractice\\Food_cart_re\\src\\components\\Cart\\customerCheck.js",["86","87","88","89"],"//監測是否為空白跟符合5碼郵遞區號 > 整合成一個handler\r\n//透過useRef取資料往上船\r\n//\r\nimport classes from './customerCheck.module.css'\r\nimport { useRef } from 'react';\r\n\r\n\r\n\r\nconst CustomerCheck = (props) =>{\r\n\r\n    const nameInputRef = useRef();\r\n    const streetInputRef = useRef();\r\n    const postalInputRef = useRef();\r\n    const cityInputRef = useRef();\r\n\r\n    const confirmHandler= (event) => {\r\n        event.preventDefault();\r\n\r\n        const EnterName = nameInputRef.current.value;\r\n        const EnterStreet = streetInputRef.current.value;\r\n        const EnterPostal = postalInputRef.current.value;\r\n        const EnterCity = cityInputRef.current.value;\r\n\r\n        const checkNameIsValid = !EnterName.trim() === '';\r\n        const checkStreetIsValid = !EnterStreet.trim() === '';\r\n        const checkCityIsValid = !EnterCity.trim() === '';\r\n        const checkPostalIsValid = EnterPostal.trim().length === 5;\r\n\r\n        const formIsOkay = checkNameIsValid & checkCityIsValid & checkPostalIsValid &checkStreetIsValid;\r\n\r\n        if (!formIsOkay)  \r\n           { return};\r\n        \r\n        \r\n        props.onCofirm = ({\r\n            name: EnterName,\r\n            street: EnterStreet,\r\n            city: EnterCity,\r\n            postal: EnterPostal,\r\n        });\r\n    };\r\n\r\n\r\n        const nameControlClasses = `${classes.control} ${\r\n            checkNameIsValid ? '' : classes.invalid\r\n        }`;\r\n        const streetControlClasses = `${classes.control} ${\r\n            checkStreetIsValid? '' : classes.invalid\r\n          }`;\r\n        const postalCodeControlClasses = `${classes.control} ${\r\n            checkPostalIsValid ? '' : classes.invalid\r\n          }`;\r\n        const cityControlClasses = `${classes.control} ${\r\n            checkCityIsValid ? '' : classes.invalid\r\n          }`;\r\n\r\n    return (\r\n        <form className={classes.form} onSubmit={confirmHandler}>\r\n            \r\n            <div className={nameControlClasses}>\r\n                <label htmlFor=\"name\">Your Name</label>\r\n                <input type=\"text\" id=\"name\" ref={nameInputRef}/>\r\n            </div>\r\n\r\n            <div className={streetControlClasses}>\r\n                <label htmlFor=\"street\">Street</label>\r\n                <input type=\"text\" id=\"street\" ref={streetInputRef}/>\r\n            </div>\r\n\r\n            <div className={postalCodeControlClasses}>\r\n                <label htmlFor=\"postal\">Your postal ID</label>\r\n                <input type=\"text\" id=\"postal\" ref={postalInputRef}/>\r\n            </div>\r\n\r\n            <div className={cityControlClasses}>\r\n                <label htmlFor=\"city\">city</label>\r\n                <input type=\"text\" id=\"city\" ref={cityInputRef}/>\r\n            </div>\r\n\r\n            <div className={classes.actions}>\r\n            <button type='button' onClick={props.onCancel}>\r\n              Cancel\r\n            </button>\r\n            <button className={classes.submit}>Confirm</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default CustomerCheck","C:\\Users\\User\\Documents\\ReactPractice\\Food_cart_re\\src\\components\\Cart\\CustomerCheck.js",["90","91","92","93"],"import classes from './CustomerCheck.module.css'\r\nimport { useRef } from 'react';\r\n\r\n\r\n\r\nconst CustomerCheck = (props) =>{\r\n\r\n    const nameInputRef = useRef();\r\n    const streetInputRef = useRef();\r\n    const postalInputRef = useRef();\r\n    const cityInputRef = useRef();\r\n\r\n    const confirmHandler= (event) => {\r\n        event.preventDefault();\r\n\r\n        const enterName = nameInputRef.current.value;\r\n        const enterStreet = streetInputRef.current.value;\r\n        const enterPostal = postalInputRef.current.value;\r\n        const enterCity = cityInputRef.current.value;\r\n\r\n        const checkNameIsValid = !enterName.trim() === '';\r\n        const checkStreetIsValid = !enterStreet.trim() === '';\r\n        const checkCityIsValid = !enterCity.trim() === '';\r\n        const checkPostalIsValid = enterPostal.trim().length === 5;\r\n\r\n        const formIsOkay = checkNameIsValid & checkCityIsValid & checkPostalIsValid &checkStreetIsValid;\r\n\r\n        if (!formIsOkay)  \r\n           { return};\r\n        \r\n        \r\n        props.onCofirm = ({\r\n            name: enterName,\r\n            street: enterStreet,\r\n            city: enterCity,\r\n            postal: enterPostal,\r\n        });\r\n    };\r\n\r\n\r\n        const nameControlClasses = `${classes.control} ${\r\n            checkNameIsValid? '' : classes.invalid\r\n        }`;\r\n        const streetControlClasses = `${classes.control} ${\r\n            checkStreetIsValid? '' : classes.invalid\r\n          }`;\r\n        const postalCodeControlClasses = `${classes.control} ${\r\n            checkPostalIsValid? '' : classes.invalid\r\n          }`;\r\n        const cityControlClasses = `${classes.control} ${\r\n            checkCityIsValid? '' : classes.invalid\r\n          }`;\r\n\r\n    return (\r\n        <form className={classes.form} onSubmit={confirmHandler}>\r\n            \r\n            <div className={nameControlClasses}>\r\n                <label htmlFor=\"name\">Your Name</label>\r\n                <input type=\"text\" id=\"name\" ref={nameInputRef}/>\r\n            </div>\r\n\r\n            <div className={streetControlClasses}>\r\n                <label htmlFor=\"street\">Street</label>\r\n                <input type=\"text\" id=\"street\" ref={streetInputRef}/>\r\n            </div>\r\n\r\n            <div className={postalCodeControlClasses}>\r\n                <label htmlFor=\"postal\">Your postal ID</label>\r\n                <input type=\"text\" id=\"postal\" ref={postalInputRef}/>\r\n            </div>\r\n\r\n            <div className={cityControlClasses}>\r\n                <label htmlFor=\"city\">city</label>\r\n                <input type=\"text\" id=\"city\" ref={cityInputRef}/>\r\n            </div>\r\n\r\n            <div className={classes.actions}>\r\n            <button type='button' onClick={props.onCancel}>\r\n              Cancel\r\n            </button>\r\n            <button className={classes.submit}>Confirm</button>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default CustomerCheck",{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","severity":2,"message":"99","line":36,"column":9,"nodeType":"100","messageId":"101","endLine":41,"endColumn":11},{"ruleId":"102","severity":1,"message":"103","line":36,"column":111,"nodeType":"104","messageId":"105","endLine":36,"endColumn":112},{"ruleId":"106","severity":2,"message":"107","line":39,"column":19,"nodeType":"108","messageId":"109","endLine":39,"endColumn":27},{"ruleId":"106","severity":2,"message":"110","line":45,"column":13,"nodeType":"108","messageId":"109","endLine":45,"endColumn":29},{"ruleId":"106","severity":2,"message":"111","line":48,"column":13,"nodeType":"108","messageId":"109","endLine":48,"endColumn":31},{"ruleId":"106","severity":2,"message":"112","line":51,"column":13,"nodeType":"108","messageId":"109","endLine":51,"endColumn":31},{"ruleId":"106","severity":2,"message":"113","line":54,"column":13,"nodeType":"108","messageId":"109","endLine":54,"endColumn":29},{"ruleId":"106","severity":2,"message":"110","line":42,"column":13,"nodeType":"108","messageId":"109","endLine":42,"endColumn":29},{"ruleId":"106","severity":2,"message":"111","line":45,"column":13,"nodeType":"108","messageId":"109","endLine":45,"endColumn":31},{"ruleId":"106","severity":2,"message":"112","line":48,"column":13,"nodeType":"108","messageId":"109","endLine":48,"endColumn":31},{"ruleId":"106","severity":2,"message":"113","line":51,"column":13,"nodeType":"108","messageId":"109","endLine":51,"endColumn":29},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-undef","'userData' is not defined.","Identifier","undef","'checkNameIsValid' is not defined.","'checkStreetIsValid' is not defined.","'checkPostalIsValid' is not defined.","'checkCityIsValid' is not defined.","no-global-assign","no-unsafe-negation"]